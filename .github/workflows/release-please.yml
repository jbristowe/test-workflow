on:
  push:
    branches: [main]
    paths-ignore:
      - 'README.md'
name: release-please
env:
  ACTION_NAME: install-octopus-cli-action
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: npm
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: action.yml
      #     path: action.yml
  release-please:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          command: github-release
          package-name: ${{env.ACTION_NAME}}
          release-type: node
      - uses: actions/checkout@v3
      - name: Tag major and minor versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
  # pull-request:
  #   if: ${{ needs.release-please.outputs.release_created }}
  #   needs: [build, release-please]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - id: release-pr
  #       uses: google-github-actions/release-please-action@v3
  #       with:
  #         command: github-release
  #         package-name: ${{env.ACTION_NAME}}
  #         release-type: node
  #     - uses: actions/checkout@v3
  #     - id: label
  #       if: ${{ steps.release-pr.outputs.pr }}
  #       uses: actions/github-script@v3
  #       with:
  #           github-token: ${{secrets.GITHUB_TOKEN}}
  #           script: |
  #             const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
  #             await github.issues.addLabels({
  #               owner,
  #               repo,
  #               issue_number: ${{steps.release-pr.outputs.pr}},
  #               labels: ['autorelease: pending']
  #             });
  #             console.log(`Tagged ${{steps.release-pr.outputs.pr}}`)